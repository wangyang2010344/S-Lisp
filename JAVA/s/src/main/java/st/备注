
 *绑定，函数类型可省，从协议过来。
 * a:KM={
 *     x:98,
 *     y:fn(a,b){
 *
 *     }
 * }
 * 绑定
 * b=898
 * 函数声明，入参类型和变量不可省
 * c=fn(x:Int,y:Boolean):String{
 *
 * }
 * 调用
 * (w,y)=c(9,true)
 * 协议，类型不可省，变量可省
 * {
 *     x:Int,
 *     y:fn(Int,Boolean):String
 * }
 *
 * interface下，可值覆盖，可函数实现。

应该考虑类似mb.ajax.require那种
lib:{
},
delay:true,
type:{

},
out:{
}
泛型其实是类型的函数，协议上有<T>，函数上有<T>，类型没有进一步的类型标注。
AST语法树，JSON格式，是怎样表达的，现在只是把泛型的type变成具体的Exp子类
并不能一次简化成C一样。
类似于JSON，但又比JSON强大，可以兼容表达式

泛型协议只是在声明时具体化。泛型函数在调用时如何确定？